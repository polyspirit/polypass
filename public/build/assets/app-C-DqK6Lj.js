import"./bootstrap-CjSicyJb.js";import{P as h,C as u}from"./form-xyd5t12l.js";import"./quill-Cpj98o6Y.js";class p{constructor(){this.size=12,this.fieldPass=document.querySelector("#text-generated-password"),this.fieldPass&&(this.btnUpdate=document.querySelector(".js-generator-update"),this.btnCopy=document.querySelector(".js-generator-copy"),this.sizeRange=document.querySelector(".js-generator-size"),this.sizeBadge=document.querySelector(".js-generator-size-badge"),this.checkboxes=document.querySelectorAll(".js-generator-checkboxes .form-check-input"),this.btnUpdate.onclick=this.generate.bind(this),this.btnCopy.onclick=this.copy.bind(this),this.sizeRange.oninput=this.changeSize.bind(this),this.generate())}changeSize(){this.size=parseInt(this.sizeRange.value),this.sizeBadge.innerText=this.size}copy(){formControls[this.fieldPass.name].copyValue()}generate(){const e=[];for(const t of this.checkboxes)t.checked&&e.push(t.name);const o=new h(this.size,e);this.fieldPass.value=o.generate()}}class g{constructor(){this.portField=document.querySelector(".js-port-field"),this.protocolSelect=document.querySelector(".js-protocol-select"),this.portField&&this.protocolSelect&&(this.protocolSelect.onchange=this.changePort.bind(this),this.portField.value||this.changePort())}changePort(){const e=this.protocolSelect.options[this.protocolSelect.selectedIndex];this.portField.value=e.dataset.port}}class f{constructor(){const e=document.querySelectorAll(".js-fake-button");for(const o of e)o.onclick=t=>{this.submitHiddenForm(t,o.dataset.id)}}submitHiddenForm(e,o){e.preventDefault();const t=document.querySelector(".hidden-form#"+o);t&&t.submit()}}class m{constructor(e,o,t="note-editor"){if(this.container=document.getElementById(t),!this.container){console.log(`NoteEditor: Container with id '${t}' not found`);return}if(this.textarea=document.getElementById("textarea-note"),!this.textarea){console.log(`NoteEditor: Textarea with id 'textarea-note' not found for container '${t}'`);return}this.readonly=parseInt(this.container.dataset.readonly),this.hideTextarea(),console.log(`NoteEditor: Initializing for container '${t}'`),console.log("NoteEditor: Initial content:",this.container.dataset.initialContent);const s=new e(`#${t}`,{readOnly:this.readonly,modules:{toolbar:this.readonly?!1:this.getToolbarOptions(),syntax:{hljs:o}},theme:"snow"});let n;if(this.container.dataset.initialContent)try{n=JSON.parse(this.container.dataset.initialContent),console.log("NoteEditor: Parsed initial content:",n)}catch(i){console.log("NoteEditor: Error parsing initial content:",i),n={ops:[{insert:this.container.dataset.initialContent}]},console.log("NoteEditor: Converting plain text to Quill format:",n)}else try{n=this.textarea.value.trim()?JSON.parse(this.textarea.value):{ops:[{insert:`
`}]}}catch(i){console.log("NoteEditor: Error parsing textarea content:",i),n={ops:[{insert:this.textarea.value||`
`}]}}s.setContents(n),s.on("text-change",(i,a,c)=>{if(c==="user"){const d=s.getContents();this.textarea.value=JSON.stringify(d)}});const l=this.container.closest("form");l&&l.addEventListener("submit",()=>{const i=s.getContents(),a=JSON.stringify(i);this.textarea.value=a})}hideTextarea(){this.textarea&&(this.textarea.style.display="none")}getToolbarOptions(){return[["bold","italic","underline","strike"],["blockquote","code-block"],["link","image","video","formula"],[{header:1},{header:2}],[{list:"ordered"},{list:"bullet"},{list:"check"}],[{script:"sub"},{script:"super"}],[{indent:"-1"},{indent:"+1"}],[{direction:"rtl"}],[{size:["small",!1,"large","huge"]}],[{header:[1,2,3,4,5,6,!1]}],[{color:null},{background:null}],[{font:null}],[{align:null}],["clean"]]}}new u;new p;new g;new f;new m(window.Quill,window.hljs,"note-editor");
